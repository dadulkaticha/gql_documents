version: "3.10"

services:
  src:
    image: src
    build:
      # context definuje cestu k popisu
      context: .
    environment:
      # promenne, ktere lze cist v kontejneru
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
      - POSTGRES_HOST=postgres:5432
      - POSTGRES_DB=postgres
      - DEMO=true
    healthcheck:
      # definice, umoznujici provest test, zda je kontejner v poradku
      test: "curl -f -H 'Content-Type: application/json' -X POST -d '{\"query\":\"query{__schema{types{name}}}\"}' http://localhost:8000/gql/ || exit 1"
      interval: 60s
      retries: 3
      start_period: 60s
      timeout: 10s
    restart: on-failure:3 # nedojde k restartu pokud je kontejner "unhealthy", maximalne 3 pokusy
    depends_on:
      - postgres
    ports:
      - 20088:8000

  postgres:
    image: postgres
    environment:
      # promenne, ktere lze cist v kontejneru
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 60s
      timeout: 10s
      retries: 5
    restart: on-failure:3 # nedojde k restartu pokud je kontejner "unhealthy", maximalne 3 pokusy
    ports:
     - 5432:5432

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      # promenne, ktere lze cist v kontejneru
      - PGADMIN_DEFAULT_EMAIL=anoyne@anywhere.com
      - PGADMIN_DEFAULT_PASSWORD=example
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 60s
      timeout: 10s
      retries: 5
    ports:
      - 22080:80